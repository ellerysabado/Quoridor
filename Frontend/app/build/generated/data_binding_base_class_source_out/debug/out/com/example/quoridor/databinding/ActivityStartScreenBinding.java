// Generated by view binder compiler. Do not edit!
package com.example.quoridor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.quoridor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStartScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button accountButton;

  @NonNull
  public final Button exitButton;

  @NonNull
  public final Button leaderboardButton;

  @NonNull
  public final TextView quoridorLogo;

  @NonNull
  public final Button settingsButton;

  @NonNull
  public final Button startGameButton;

  private ActivityStartScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button accountButton, @NonNull Button exitButton, @NonNull Button leaderboardButton,
      @NonNull TextView quoridorLogo, @NonNull Button settingsButton,
      @NonNull Button startGameButton) {
    this.rootView = rootView;
    this.accountButton = accountButton;
    this.exitButton = exitButton;
    this.leaderboardButton = leaderboardButton;
    this.quoridorLogo = quoridorLogo;
    this.settingsButton = settingsButton;
    this.startGameButton = startGameButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStartScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStartScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_start_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStartScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountButton;
      Button accountButton = ViewBindings.findChildViewById(rootView, id);
      if (accountButton == null) {
        break missingId;
      }

      id = R.id.exitButton;
      Button exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.leaderboardButton;
      Button leaderboardButton = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardButton == null) {
        break missingId;
      }

      id = R.id.quoridorLogo;
      TextView quoridorLogo = ViewBindings.findChildViewById(rootView, id);
      if (quoridorLogo == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      Button settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.startGameButton;
      Button startGameButton = ViewBindings.findChildViewById(rootView, id);
      if (startGameButton == null) {
        break missingId;
      }

      return new ActivityStartScreenBinding((ConstraintLayout) rootView, accountButton, exitButton,
          leaderboardButton, quoridorLogo, settingsButton, startGameButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
